pragma solidity ^0.4.22;

/**
 * @title DApp Decentralized Manager
**/
contract DAppManager
{
    struct DAppInformation {
        address dappAddress;
        string  dappName;
        string  orgName;
        string  orgDescription;
        uint8   nationalityCode;
        uint8   ledgerReplicated;
        string  icon;
        uint8   state;
        uint256 lastActive;
        bool    initialized;
    }

    mapping(address => DAppInformation) public dappInfoMap;
    address[] public dappIds;
    event UpdateDAppInfoAccepted();
    event RegisterDAppInfoAccepted();

    constructor() public
    {
    }

    function registerDAppInfo(string dappName, string orgName, string orgDescription, uint8 nationalityCode, uint8 ledgerReplicated, string icon)
            public
            payable
    {
        require(dappInfoMap[msg.sender].initialized == false);
        require(bytes(dappName).length > 0);
        require(bytes(orgName).length > 0);
        require(bytes(orgDescription).length > 0);
        require(nationalityCode > 0);
        require(ledgerReplicated > 0);

        dappInfoMap[msg.sender] = DAppInformation({
            dappAddress: msg.sender,
            dappName: dappName,
            orgName: orgName,
            orgDescription: orgDescription,
            nationalityCode: nationalityCode,
            ledgerReplicated: ledgerReplicated,
            icon: icon,
            state: 1,
            lastActive: now,
            initialized: true
        });
        dappIds.push(msg.sender);
        emit RegisterDAppInfoAccepted();
    }

    function updateDAppInfo(string orgDescription, uint8 ledgerReplicated, string icon)
        public
        payable
    {
        require(dappInfoMap[msg.sender].initialized == true);
        require(bytes(orgDescription).length > 0);
        require(ledgerReplicated > 0);

        DAppInformation storage info = dappInfoMap[msg.sender];
        info.orgDescription = orgDescription;
        info.ledgerReplicated = ledgerReplicated;
        info.icon = icon;
        emit UpdateDAppInfoAccepted();
    }

}
